AWSTemplateFormatVersion: 2010-09-09
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: Role-LabSetupTimerFunction
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AdministratorAccess
      Path: /
  LambdaFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: LabSetupTimerFunction
        Description: Python Function to execute scripts to setup the lab environment
        Handler: index.handler
        Runtime: python3.7
        Timeout: 120
        MemorySize: 256
        Role:
          Fn::GetAtt:
            - LambdaRole
            - Arn
        Environment:
          Variables:
            URL: "https://rsa.sesummit20.net/labfiles/lab-infrastructure/"
            SCRIPTLIST: "rsa_lab_timer_execute.txt"
        Code:
          ZipFile: |
            import certifi
            import urllib3
            import os
            u = os.environ.get('URL')
            h = urllib3.PoolManager(cert_reqs='CERT_REQUIRED',ca_certs=certifi.where())
            r = h.request('GET', u + os.environ.get('SCRIPTLIST'))
            if not r.status == 200:
                print("Could not download script list file")
                exit(1)
            sl = r.data.decode('utf-8').split("\n")
            for s in sl:
                print("Downloading source from '{}'".format(s))
                try:
                    src = h.request('GET', u + s).data.decode('utf-8')
                except Exception as e:
                    print("Could not download file ", e)
                    continue
                print("Downloaded source from '{}' with '{}' bytes".format(s, len(src)))
                print("Executing script in file '{}'".format(s))
                try:
                    exec(src)
                except Exception as e:
                    print("Could not execute script in file ", e)
                    continue
                print("Fininshed executing script in file '{}'".format(s))

  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "Runs a lambda to configure lab environment"
      Name: "LabSetupTimerTrigger"
      ScheduleExpression: "rate(2 minutes)"
      State: "ENABLED"
      Targets: 
        - Arn: !GetAtt LambdaFunction.Arn
          Id: "TargetFunction"